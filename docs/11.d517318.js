(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{31:function(r,s,n){"use strict";n.r(s);var a={components:{}},t=n(2),e=Object(t.a)(a,function(){var r=this,s=r.$createElement,n=r._self._c||s;return n("section",[n("h1",[r._v("使用 着色器 将颜色应用到 WebGL")]),r._v(" "),n("h2",[r._v("给顶点着色")]),r._v(" "),r._m(0),r._v(" "),n("p",[r._v("假设要为正方形的每个顶点使用不同的颜色，以此渲染一个渐变的色彩。")]),r._v(" "),n("p",[r._v("第一步，为顶点建立相应的颜色。首先是创建一个顶点颜色数组，然后将它们存到 WebGL 缓冲区中。")]),r._v(" "),r._m(1),r._v(" "),n("p",[r._v("为了应用这些颜色，需要继续修改 顶点着色器，使得着色器可以从颜色缓冲区读取出正确的颜色。")]),r._v(" "),r._m(2),r._v(" "),n("h2",[r._v("给片段着色")]),r._v(" "),r._m(3),r._v(" "),r._m(4),r._v(" "),n("h2",[r._v("绘制")]),r._v(" "),n("p",[r._v("接下来，只要在 WebGL 中初始化颜色属性，然后在绘制部分使用这些颜色即可。")]),r._v(" "),r._m(5),r._v(" "),n("block-demo",{attrs:{tip:"",source:"const app = document.querySelector('#app')\nconst canvas = document.createElement('canvas')\ncanvas.width = 400\ncanvas.height = 300\n\napp.appendChild(canvas)\n\nconst gl = canvas.getContext('webgl')\n\n// 顶点着色器\nconst vsSource = `\n  attribute vec4 aVertexPosition;\n  attribute vec4 aVertexColor;\n\n  uniform mat4 uModelViewMatrix;\n  uniform mat4 uProjectionMatrix;\n\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n    vColor = aVertexColor;\n  }\n`\n\n// 片段着色器\nconst fsSource = `\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`\n\n// 着色器程序\nconst shaderProgram = initShaderProgram(gl, vsSource, fsSource)\nconst programInfo = {\n  program: shaderProgram,\n  attribLocations: {\n    vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\n    vertexColor: gl.getAttribLocation(shaderProgram, 'aVertexColor')\n  },\n  uniformLocations: {\n    projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\n    modelViewMatrix: gl.getUniformLocation(shaderProgram, 'uModelViewMatrix')\n  }\n}\n\n// 创建缓冲区\nconst buffers = initBuffers(gl)\n//  绘制场景\ndrawScene(gl, programInfo, buffers)\n\n// 加载 着色器\nfunction loadShader(gl, type, source) {\n  // 0. 创建指定类型的着色器\n  const shader = gl.createShader(type)\n\n  // 1. 上传源码\n  gl.shaderSource(shader, source)\n\n  // 2. 编译着色器\n  gl.compileShader(shader)\n\n  // 检测编译状态\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    alert('编译失败！', gl.getShaderInfoLog(shader))\n    gl.deleteShader(shader)\n    return null\n  }\n\n  return shader\n}\n\n// 链接着色器程序\nfunction initShaderProgram(gl, vsSouce, fsSource) {\n  // 0. 创建两类型着色器\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource)\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource)\n\n  // 1. 附加着色器程序\n  const shaderProgram = gl.createProgram()\n  gl.attachShader(shaderProgram, vertexShader)\n  gl.attachShader(shaderProgram, fragmentShader)\n  gl.linkProgram(shaderProgram)\n\n  // 检测链接状态\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    alert('初始化着色器程序失败', gl.getProgramInfoLog(shaderProgram))\n    return null\n  }\n\n  return shaderProgram\n}\n\nfunction initBuffers(gl) {\n  // 0. 创建 buffer 存储正方形顶点\n  const buffer = gl.createBuffer()\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n  // 1. 将顶点传入 WebGL\n  const positions = [1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0]\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW)\n\n  // 2. 颜色\n  const colors = [\n    1,\n    1,\n    1,\n    1, // 白色\n    1,\n    0,\n    0,\n    1, // 红色\n    0,\n    1,\n    0,\n    1, // 绿色\n    0,\n    0,\n    1,\n    1 // 蓝色\n  ]\n\n  const color = gl.createBuffer()\n  gl.bindBuffer(gl.ARRAY_BUFFER, color)\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW)\n\n  return { position: buffer, color }\n}\n\n// 绘制场景\nfunction drawScene(gl, programInfo, buffers, z = 8.0) {\n  gl.clearColor(0.0, 0.0, 0.0, 1)\n  gl.clearDepth(1) // 清空\n  gl.enable(gl.DEPTH_TEST)\n  gl.depthFunc(gl.LEQUAL)\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n  // 利用 gl-matrix 创建一个 透视投影相机\n  const feildOfView = (45 * Math.PI) / 180\n  const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight\n  const zNear = 0.1\n  const zFar = 100.0\n  const projectionMatrix = mat4.create()\n  mat4.perspective(projectionMatrix, feildOfView, aspect, zNear, zFar)\n\n  const modelViewMatrix = mat4.create()\n  mat4.translate(modelViewMatrix, modelViewMatrix, [-0.0, 0.0, -z])\n\n  {\n    const numComponents = 2\n    const type = gl.FLOAT\n    const normalize = false\n    const stride = 0\n    const offset = 0\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexPosition,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition)\n  }\n\n  {\n    const numComponents = 4\n    const type = gl.FLOAT\n    const normalize = false\n    const stride = 0\n    const offset = 0\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexColor,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexColor)\n  }\n\n  // 告知 WebGL 使用 着色器 绘制\n  gl.useProgram(programInfo.program)\n\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.projectionMatrix,\n    false,\n    projectionMatrix\n  )\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.modelViewMatrix,\n    false,\n    modelViewMatrix\n  )\n\n  {\n    const offset = 0\n    const vertexCount = 4\n    gl.drawArrays(gl.TRIANGLE_STRIP, offset, vertexCount)\n  }\n}\n"}},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" app = "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[r._v("document")]),r._v(".querySelector("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("'#app'")]),r._v(")\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" canvas = "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[r._v("document")]),r._v(".createElement("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("'canvas'")]),r._v(")\ncanvas.width = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("400")]),r._v("\ncanvas.height = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("300")]),r._v("\n\napp.appendChild(canvas)\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" gl = canvas.getContext("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("'webgl'")]),r._v(")\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" vsSource = "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("`\n  attribute vec4 aVertexPosition;\n  attribute vec4 aVertexColor;\n\n  uniform mat4 uModelViewMatrix;\n  uniform mat4 uProjectionMatrix;\n\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n    vColor = aVertexColor;\n  }\n`")]),r._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" fsSource = "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("`\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`")]),r._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" shaderProgram = initShaderProgram(gl, vsSource, fsSource)\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" programInfo = {\n  "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[r._v("program")]),r._v(": shaderProgram,\n  "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[r._v("attribLocations")]),r._v(": {\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[r._v("vertexPosition")]),r._v(": gl.getAttribLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("'aVertexPosition'")]),r._v("),\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[r._v("vertexColor")]),r._v(": gl.getAttribLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("'aVertexColor'")]),r._v(")\n  },\n  "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[r._v("uniformLocations")]),r._v(": {\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[r._v("projectionMatrix")]),r._v(": gl.getUniformLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("'uProjectionMatrix'")]),r._v("),\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[r._v("modelViewMatrix")]),r._v(": gl.getUniformLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("'uModelViewMatrix'")]),r._v(")\n  }\n}\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" buffers = initBuffers(gl)\n\ndrawScene(gl, programInfo, buffers)\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("function")]),r._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[r._v("loadShader")]),r._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[r._v("gl, type, source")]),r._v(") ")]),r._v("{\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" shader = gl.createShader(type)\n\n  \n  gl.shaderSource(shader, source)\n\n  \n  gl.compileShader(shader)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("if")]),r._v(" (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    alert("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("'编译失败！'")]),r._v(", gl.getShaderInfoLog(shader))\n    gl.deleteShader(shader)\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("return")]),r._v(" "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[r._v("null")]),r._v("\n  }\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("return")]),r._v(" shader\n}\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("function")]),r._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[r._v("initShaderProgram")]),r._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[r._v("gl, vsSouce, fsSource")]),r._v(") ")]),r._v("{\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource)\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" shaderProgram = gl.createProgram()\n  gl.attachShader(shaderProgram, vertexShader)\n  gl.attachShader(shaderProgram, fragmentShader)\n  gl.linkProgram(shaderProgram)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("if")]),r._v(" (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    alert("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("'初始化着色器程序失败'")]),r._v(", gl.getProgramInfoLog(shaderProgram))\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("return")]),r._v(" "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[r._v("null")]),r._v("\n  }\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("return")]),r._v(" shaderProgram\n}\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("function")]),r._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[r._v("initBuffers")]),r._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[r._v("gl")]),r._v(") ")]),r._v("{\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" buffer = gl.createBuffer()\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" positions = ["),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1.0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1.0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("-1.0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1.0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1.0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("-1.0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("-1.0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("-1.0")]),r._v("]\n  gl.bufferData(gl.ARRAY_BUFFER, "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("new")]),r._v(" "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[r._v("Float32Array")]),r._v("(positions), gl.STATIC_DRAW)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" colors = [\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(", \n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(", \n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(", \n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(" \n  ]\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" color = gl.createBuffer()\n  gl.bindBuffer(gl.ARRAY_BUFFER, color)\n  gl.bufferData(gl.ARRAY_BUFFER, "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("new")]),r._v(" "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[r._v("Float32Array")]),r._v("(colors), gl.STATIC_DRAW)\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("return")]),r._v(" { "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[r._v("position")]),r._v(": buffer, color }\n}\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("function")]),r._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[r._v("drawScene")]),r._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[r._v("gl, programInfo, buffers, z = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("8.0")])]),r._v(") ")]),r._v("{\n  gl.clearColor("),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0.0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0.0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0.0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(")\n  gl.clearDepth("),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1")]),r._v(") \n  gl.enable(gl.DEPTH_TEST)\n  gl.depthFunc(gl.LEQUAL)\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" feildOfView = ("),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("45")]),r._v(" * "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[r._v("Math")]),r._v(".PI) / "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("180")]),r._v("\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" aspect = gl.canvas.clientWidth / gl.canvas.clientHeight\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" zNear = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0.1")]),r._v("\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" zFar = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("100.0")]),r._v("\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" projectionMatrix = mat4.create()\n  mat4.perspective(projectionMatrix, feildOfView, aspect, zNear, zFar)\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" modelViewMatrix = mat4.create()\n  mat4.translate(modelViewMatrix, modelViewMatrix, ["),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("-0.0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0.0")]),r._v(", -z])\n\n  {\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" numComponents = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("2")]),r._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" type = gl.FLOAT\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" normalize = "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[r._v("false")]),r._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" stride = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" offset = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v("\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexPosition,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition)\n  }\n\n  {\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" numComponents = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("4")]),r._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" type = gl.FLOAT\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" normalize = "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[r._v("false")]),r._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" stride = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" offset = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v("\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexColor,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexColor)\n  }\n\n  \n  gl.useProgram(programInfo.program)\n\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.projectionMatrix,\n    "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[r._v("false")]),r._v(",\n    projectionMatrix\n  )\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.modelViewMatrix,\n    "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[r._v("false")]),r._v(",\n    modelViewMatrix\n  )\n\n  {\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" offset = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" vertexCount = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("4")]),r._v("\n    gl.drawArrays(gl.TRIANGLE_STRIP, offset, vertexCount)\n  }\n}\n")])])])],1)},[function(){var r=this.$createElement,s=this._self._c||r;return s("p",[this._v("在 "),s("code",{pre:!0},[this._v("WebGL")]),this._v(" 中，物体是由一系列顶点组成的，每一个顶点都有位置和颜色信息。默认情况下，所有像素的颜色（及它所有的属性，包括位置等）都是由 线性插值 计算得来，自动形成平滑的渐变。")])},function(){var r=this.$createElement,s=this._self._c||r;return s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":""}},[this._v("const colors = [\n  1, 1, 1, 1, // 白色\n  1, 0, 0, 1, // 红色\n  0, 1, 0, 1, // 绿色\n  0, 0, 1, 1, // 蓝色\n]\n\nconst buffer = gl.createBuffer()\ngl.bindBuffer(gl.ARRAY_BUFFER, buffer)\ngl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW)\n")])])},function(){var r=this,s=r.$createElement,n=r._self._c||s;return n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[n("span",{pre:!0,attrs:{class:"hljs-tag"}},[r._v("<"),n("span",{pre:!0,attrs:{class:"hljs-name"}},[r._v("script")]),r._v(" "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[r._v("type")]),r._v("="),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v('"x-shader/x-vertex"')]),r._v(">")]),n("span",{pre:!0,attrs:{class:"actionscript"}},[r._v("\n  attribute vec3 aVertextPosition;\n  attribute vec4 aVertexColor;\n\n  uniform mat4 uModelViewMatrix;\n  uniform mat4 uProjectionMatrix;\n\n  varying lowp vec4 vColor;\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("void")]),r._v(" main() {\n    gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(aVertexPosition, "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("1.0")]),r._v(");\n    vColor = aVertexColor;\n  }\n")]),n("span",{pre:!0,attrs:{class:"hljs-tag"}},[r._v("</"),n("span",{pre:!0,attrs:{class:"hljs-name"}},[r._v("script")]),r._v(">")]),r._v("\n")])])},function(){var r=this.$createElement,s=this._self._c||r;return s("p",[this._v("为了使每个像素都得到插值后的颜色，只需要在 "),s("code",{pre:!0},[this._v("vColor")]),this._v(" 变量中获取颜色值。")])},function(){var r=this,s=r.$createElement,n=r._self._c||s;return n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[n("span",{pre:!0,attrs:{class:"hljs-tag"}},[r._v("<"),n("span",{pre:!0,attrs:{class:"hljs-name"}},[r._v("script")]),r._v(" "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[r._v("type")]),r._v("="),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v('"x-shader/x-fragment"')]),r._v(">")]),n("span",{pre:!0,attrs:{class:"actionscript"}},[r._v("\n  varying lowp vec4 vColor;\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("void")]),r._v(" main() {\n    gl_FragColor = vColor;\n  }\n")]),n("span",{pre:!0,attrs:{class:"hljs-tag"}},[r._v("</"),n("span",{pre:!0,attrs:{class:"hljs-name"}},[r._v("script")]),r._v(">")]),r._v("\n")])])},function(){var r=this,s=r.$createElement,n=r._self._c||s;return n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[r._v("const")]),r._v(" vertexColorAttribute = gl.getAttribLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[r._v("'aVertexColor'")]),r._v(")\ngl.enableVertexAttribArray(vertexColorAttribute)\ngl.bindBuffer(gl.ARRAY_BUFFER, buffers.color)\ngl.vertexAttribPointer(vertexColorAttribute, "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("4")]),r._v(", gl.FLOAT, "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[r._v("false")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[r._v("0")]),r._v(")\n")])])}],!1,null,null,null);s.default=e.exports}}]);