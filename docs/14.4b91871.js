(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{35:function(s,n,r){"use strict";r.r(n);var e={components:{}},a=r(2),t=Object(a.a)(e,function(){var s=this,n=s.$createElement,r=s._self._c||n;return r("section",[r("h1",[s._v("加载纹理")]),s._v(" "),r("p",[s._v("现在使用一张单一的纹理贴到立方体的 6 个面上，但是同样的方法可以用来加载任意数量的纹理贴图。")]),s._v(" "),s._m(0),s._v(" "),s._m(1),s._v(" "),s._m(2),s._v(" "),s._m(3),s._v(" "),s._m(4),s._v(" "),s._m(5),s._v(" "),r("h2",[s._v("非 2 的幂纹理")]),s._v(" "),r("p",[s._v("一般来说，宽和高都是 2 的幂的纹理使用是最理想的。2 的幂纹理在渲染内存里的存储更高效，而且对它们的使用限制也更少。由美术工作人员生成的纹理最终在用来渲染前都应该使用放大或缩小的方式把它生成为 2 的幂纹理，其实事实上来说，在创作纹理之初就应该直接使用大小是 2 的幂的宽和高。纹理的每一边都应该是像 1，2，4，8，16，32，64，128，256，512，1024 或 2048 这样的值。当然也要注意尺寸的大小，因为虽说现在的大部分设置都已经可以支持 4096 像素的图片，但也不是全部；而有一些设备甚至可以支持 8192 或更高像素呢。")]),s._v(" "),r("p",[s._v("有的时候从你的特定情况出发，使用 2 的幂纹理会比较困难。当使用到第三方的资源时，一般来说最好的方式就是先使用 HTML5 的画布把图片修正成 2 的幂然后再放到 WebGL 中进行渲染使用，这样一来，如果图片拉伸比较明显的话纹理坐标的值可需要适当地进行修正。")]),s._v(" "),r("p",[s._v("但是，如果你一定要使用非 2 的幂纹理的话，WebGL 也有原生支持，不过这些支持是受限的。当然在某些情况下使用非 2 的幂纹理也是很有用的，比如这张纹理刚好与你的显示器的分辨率相匹配，或者使用画布重新生成纹理的方式并不值得时。但是要特别注意的是：这种非 2 的幂纹理不能用来生成多级渐进纹理，而且不能使用纹理重复（重复纹理寻址等）。")]),s._v(" "),r("p",[s._v("使用重复纹理寻址的一个例子就是使用一张砖块的纹理来平铺满一面墙壁。")]),s._v(" "),r("p",[s._v("多级渐进纹理和纹理坐标重复可以通过调用 texParameteri() 来禁用，当然首先你已经通过调用 bindTexture() 绑定过纹理了。这样虽然已经可以使用非 2 的幂纹理了，但是你将无法使用多级渐进纹理，纹理坐标包装，纹理坐标重复，而且无法控制设备如何处理你的纹理。")]),s._v(" "),s._m(6),s._v(" "),r("p",[s._v("现在，当使用以上参数时，兼容 WebGL 的设备就会自动变得可以使用任何分辨率的纹理（当然还要考虑像素上限）。如果不使用上面这些参数的话，任何非 2 的幂纹理使用都会失败然后返回一张纯黑图片。")]),s._v(" "),r("h2",[s._v("映射纹理到面")]),s._v(" "),r("p",[s._v("现在，纹理已经加载好了，而且已经可以使用了。但是在使用之前我们还要创建好纹理坐标到立方体各个面的顶点的映射关系。下面的代码通过替换之前的设置每个面颜色的代码，当然还是在 initBuffers() 函数里。")]),s._v(" "),s._m(7),s._v(" "),r("p",[s._v("首先，代码创建了一个 WebGL 缓存区，用来保存每个面的纹理坐标信息，然后把这个缓存区绑定到 WebGL 以方便我们写入数据。")]),s._v(" "),r("p",[s._v("数组变量 textureCoordinates 中定义好了与每个面上的每个顶点一一对应的纹理坐标。请注意，纹理坐标的取值范围只能从 0.0 到 1.0，所以不论纹理贴图的实际大小是多少，为了实现纹理映射，我们要使用的纹理坐标只能规范化到 0.0 到 1.0 的范围内。")]),s._v(" "),r("p",[s._v("纹理坐标信息给定了之后，把这个数组里的数据都写到 WebGL 缓存区，这样 WebGL 就能使用这个坐标数据了。")]),s._v(" "),r("h2",[s._v("更新着色器")]),s._v(" "),r("p",[s._v("为了使用纹理来代替单一的颜色，着色器程序和着色器程序的初始化代码都需要进行修改。")]),s._v(" "),r("p",[s._v("先让我们看一看需要加入函数 initShaders() 里的非常简单的改变：")]),s._v(" "),s._m(8),s._v(" "),r("p",[s._v("这段代码中我们使用包含纹理坐标信息的属性替换之前使用的顶点颜色属性。")]),s._v(" "),r("h3",[s._v("顶点着色器")]),s._v(" "),r("p",[s._v("接下来我们会修改顶点着色器代码，现在不再需要获取顶点颜色数据，而是获取纹理坐标数据。")]),s._v(" "),s._m(9),s._v(" "),r("p",[s._v("代码的关键更改在于不再获取顶点颜色数据转而获取和设置纹理坐标数据；这样就能把顶点与其对应的纹理联系在一起了。")]),s._v(" "),r("h3",[s._v("片段着色器")]),s._v(" "),r("p",[s._v("那么片段着色器也要相应地进行更改：")]),s._v(" "),s._m(10),s._v(" "),r("p",[s._v("现在的代码不会再使用一个简单的颜色值填充片段颜色，片段的颜色是通过采样器使用最好的映射方式从纹理中的每一个像素计算出来的。")]),s._v(" "),r("p",[s._v("绘制具体纹理贴图的立方体节\n接下来是对 drawScene() 函数的更改，为了使整体的代码看起来更简洁，我们去掉了让立方体位置变化的代码，现在它只会随着时间的变化进行旋转，而为了使用纹理，所要进行的代码更改确是很少的。")]),s._v(" "),r("p",[s._v("使用下面的代码代替映射颜色到纹理的代码：")]),s._v(" "),s._m(11),s._v(" "),s._m(12),s._v(" "),r("block-demo",{attrs:{tip:"",source:"const app = document.querySelector('#app')\nconst canvas = document.createElement('canvas')\ncanvas.width = 400\ncanvas.height = 300\n\napp.appendChild(canvas)\n\nconst gl = canvas.getContext('webgl')\n\nstart()\n\nfunction start() {\n  // 顶点着色器\n  const vsScource = `\n        attribute vec4 aVertexPosition;\n        attribute vec2 aTextureCoord;\n\n        uniform mat4 uModelViewMatrix;\n        uniform mat4 uProjectionMatrix;\n\n        varying highp vec2 vTextureCoord;\n\n        void main() {\n          vTextureCoord = aTextureCoord;\n          gl_Position  = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n        }\n      `\n\n  // 片段着色器\n  const fsSource = `\n        varying highp vec2 vTextureCoord;\n\n        uniform sampler2D uSampler;\n\n        void main() {\n          gl_FragColor = texture2D(uSampler, vTextureCoord);\n        }\n      `\n\n  // 0： 创建 着色器连接程序 以告诉 WebGL 如何渲染数据\n  const shaderProgram = initShaderProgram(gl, vsScource, fsSource)\n  const programInfo = {\n    program: shaderProgram,\n    attribLocations: {\n      vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\n      // vertexColor: gl.getAttribLocation(shaderProgram, \"aVertexColor\"),\n      textureCoord: gl.getAttribLocation(shaderProgram, 'aTextureCoord')\n    },\n    uniformLocations: {\n      projectionMatrix: gl.getUniformLocation(\n        shaderProgram,\n        'uProjectionMatrix'\n      ),\n      modelViewMatrix: gl.getUniformLocation(shaderProgram, 'uModelViewMatrix'),\n      sampler: gl.getUniformLocation(shaderProgram, 'uSampler')\n    }\n  }\n\n  // 1. 创建 缓冲区 存储所绘制图形的顶点\n  const buffers = initBuffers(gl)\n\n  const texture = loadTextures(\n    gl,\n    'https://p0.ssl.qhimg.com/t01836de9c0b1068a6d.jpg'\n  )\n\n  // 2. 绘制场景\n  drawScene(gl, programInfo, buffers, texture)\n\n  let d = 6\n  let r = 0\n\n  const step = () => {\n    r += 0.1\n\n    drawScene(gl, programInfo, buffers, texture, d, r)\n    requestAnimationFrame(step)\n  }\n\n  requestAnimationFrame(step)\n}\n\n// 创建 着色器连接程序，将 顶点着色器 和 片段着色器 连接起来\nfunction initShaderProgram(gl, vsScource, fsSource) {\n  const vsShader = loadShader(gl, gl.VERTEX_SHADER, vsScource)\n  const fsShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource)\n\n  const shaderProgram = gl.createProgram()\n  // 0. 附加着色器\n  gl.attachShader(shaderProgram, vsShader)\n  // 0. 附加着色器\n  gl.attachShader(shaderProgram, fsShader)\n  // 1. 连接着色器\n  gl.linkProgram(shaderProgram)\n\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    alert('创建 着色器连接程序 失败!' + gl.getProgramInfoLog(shaderProgram))\n    return null\n  }\n\n  return shaderProgram\n}\n\n// 创建着色器\nfunction loadShader(gl, type, source) {\n  // 0. 创建指定类型的 着色器\n  const shader = gl.createShader(type)\n  // 1. 上传 着色器源码\n  gl.shaderSource(shader, source)\n  // 2. 编译着色器\n  gl.compileShader(shader)\n\n  // 3. 检测 着色器 是否编译成功\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    alert('编译着色器失败！' + gl.getShaderInfoLog(shader))\n    gl.deleteShader(shader)\n    return null\n  }\n\n  return shader\n}\n\n// 创建 缓冲区\nfunction initBuffers(gl) {\n  // 0. 创建 buffer 存储正方形顶点\n  const buffer = gl.createBuffer()\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n  // 1. 将顶点传入 WebGL\n  const positions = [\n    // Front face\n    -1.0,\n    -1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n    1.0,\n\n    // Back face\n    -1.0,\n    -1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    -1.0,\n\n    // Top face\n    -1.0,\n    1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    -1.0,\n\n    // Bottom face\n    -1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    -1.0,\n    1.0,\n\n    // Right face\n    1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n\n    // Left face\n    -1.0,\n    -1.0,\n    -1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n    -1.0\n  ]\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW)\n\n  var cubeVerticesIndexBuffer = gl.createBuffer()\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cubeVerticesIndexBuffer)\n\n  var cubeVertexIndices = [\n    0,\n    1,\n    2,\n    0,\n    2,\n    3, // front\n    4,\n    5,\n    6,\n    4,\n    6,\n    7, // back\n    8,\n    9,\n    10,\n    8,\n    10,\n    11, // top\n    12,\n    13,\n    14,\n    12,\n    14,\n    15, // bottom\n    16,\n    17,\n    18,\n    16,\n    18,\n    19, // right\n    20,\n    21,\n    22,\n    20,\n    22,\n    23 // left\n  ]\n\n  // Now send the element array to GL\n\n  gl.bufferData(\n    gl.ELEMENT_ARRAY_BUFFER,\n    new Uint16Array(cubeVertexIndices),\n    gl.STATIC_DRAW\n  )\n\n  const textureCoordBuffer = gl.createBuffer()\n  gl.bindBuffer(gl.ARRAY_BUFFER, textureCoordBuffer)\n\n  const textureCoordinates = [\n    // Front\n    0.0,\n    0.0,\n    1.0,\n    0.0,\n    1.0,\n    1.0,\n    0.0,\n    1.0,\n    // Back\n    0.0,\n    0.0,\n    1.0,\n    0.0,\n    1.0,\n    1.0,\n    0.0,\n    1.0,\n    // Top\n    0.0,\n    0.0,\n    1.0,\n    0.0,\n    1.0,\n    1.0,\n    0.0,\n    1.0,\n    // Bottom\n    0.0,\n    0.0,\n    1.0,\n    0.0,\n    1.0,\n    1.0,\n    0.0,\n    1.0,\n    // Right\n    0.0,\n    0.0,\n    1.0,\n    0.0,\n    1.0,\n    1.0,\n    0.0,\n    1.0,\n    // Left\n    0.0,\n    0.0,\n    1.0,\n    0.0,\n    1.0,\n    1.0,\n    0.0,\n    1.0\n  ]\n\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array(textureCoordinates),\n    gl.STATIC_DRAW\n  )\n\n  return {\n    position: buffer,\n    textureCoord: textureCoordBuffer,\n    // color: colorBuffer,\n    cubeVerticesIndexBuffer\n  }\n}\n\n// 绘制场景\nfunction drawScene(gl, programInfo, buffers, texture, z = 10.0, rotate = 0) {\n  gl.clearColor(0.0, 0.0, 0.0, 1)\n  gl.clearDepth(1) // 清空\n  gl.enable(gl.DEPTH_TEST)\n  gl.depthFunc(gl.LEQUAL)\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n  // 利用 gl-matrix 创建一个 透视投影相机\n  const feildOfView = (45 * Math.PI) / 180\n  const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight\n  const zNear = 0.1\n  const zFar = 100.0\n  const projectionMatrix = mat4.create()\n  mat4.perspective(projectionMatrix, feildOfView, aspect, zNear, zFar)\n\n  const modelViewMatrix = mat4.create()\n  mat4.translate(modelViewMatrix, modelViewMatrix, [0, 0.0, -z])\n\n  mat4.rotate(\n    modelViewMatrix, // destination matrix\n    modelViewMatrix, // matrix to rotate\n    rotate, // amount to rotate in radians\n    [2, 0, 8]\n  )\n\n  mat4.rotate(\n    modelViewMatrix, // destination matrix\n    modelViewMatrix, // matrix to rotate\n    rotate * 0.7, // amount to rotate in radians\n    [2, 1, -8]\n  )\n\n  {\n    const numComponents = 3\n    const type = gl.FLOAT\n    const normalize = false\n    const stride = 0\n    const offset = 0\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexPosition,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition)\n  }\n\n  {\n    const numComponents = 2\n    const type = gl.FLOAT\n    const normalize = false\n    const stride = 0\n    const offset = 0\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.textureCoord)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.textureCoord,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.textureCoord)\n  }\n\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.cubeVerticesIndexBuffer)\n\n  // 告知 WebGL 使用 着色器 绘制\n  gl.useProgram(programInfo.program)\n\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.projectionMatrix,\n    false,\n    projectionMatrix\n  )\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.modelViewMatrix,\n    false,\n    modelViewMatrix\n  )\n\n  // Tell WebGL we want to affect texture unit 0\n  gl.activeTexture(gl.TEXTURE0)\n\n  // Bind the texture to texture unit 0\n  gl.bindTexture(gl.TEXTURE_2D, texture)\n\n  // Tell the shader we bound the texture to texture unit 0\n  gl.uniform1i(programInfo.uniformLocations.sampler, 0)\n\n  {\n    // const offset = 0;\n    // const vertexCount = 4;\n    // gl.drawArrays(gl.TRIANGLE_STRIP, offset, vertexCount);\n\n    const vertexCount = 36 // 可以尝试修改，一个面 2 个三角形，6个顶点\n    const type = gl.UNSIGNED_SHORT\n    const offset = 0\n    gl.drawElements(gl.TRIANGLES, vertexCount, type, offset)\n  }\n}\n\n/* 加载纹理，贴图  */\nfunction loadTextures(gl, url) {\n  const texture = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, texture)\n\n  const level = 0\n  const internalFormat = gl.RGBA\n  const width = 1\n  const height = 1\n  const border = 0\n  const srcFormat = gl.RGBA\n  const srcType = gl.UNSIGNED_BYTE\n  const pixel = new Uint8Array([0, 0, 255, 255]) // opaque blue\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    level,\n    internalFormat,\n    width,\n    height,\n    border,\n    srcFormat,\n    srcType,\n    pixel\n  )\n\n  const image = new Image()\n  image.crossOrigin = ''\n  image.onload = function() {\n    gl.bindTexture(gl.TEXTURE_2D, texture)\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      level,\n      internalFormat,\n      srcFormat,\n      srcType,\n      image\n    )\n\n    if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n      gl.generateMipmap(gl.TEXTURE_2D)\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n    }\n  }\n  image.src = url\n\n  return texture\n}\n\nfunction isPowerOf2(value) {\n  return (value & (value - 1)) == 0\n}\n"}},[r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" app = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".querySelector("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'#app'")]),s._v(")\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" canvas = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'canvas'")]),s._v(")\ncanvas.width = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("400")]),s._v("\ncanvas.height = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("300")]),s._v("\n\napp.appendChild(canvas)\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" gl = canvas.getContext("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'webgl'")]),s._v(")\n\nstart()\n\n"),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("start")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n  \n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" vsScource = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`\n        attribute vec4 aVertexPosition;\n        attribute vec2 aTextureCoord;\n\n        uniform mat4 uModelViewMatrix;\n        uniform mat4 uProjectionMatrix;\n\n        varying highp vec2 vTextureCoord;\n\n        void main() {\n          vTextureCoord = aTextureCoord;\n          gl_Position  = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n        }\n      `")]),s._v("\n\n  \n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" fsSource = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`\n        varying highp vec2 vTextureCoord;\n\n        uniform sampler2D uSampler;\n\n        void main() {\n          gl_FragColor = texture2D(uSampler, vTextureCoord);\n        }\n      `")]),s._v("\n\n  \n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" shaderProgram = initShaderProgram(gl, vsScource, fsSource)\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" programInfo = {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("program")]),s._v(": shaderProgram,\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("attribLocations")]),s._v(": {\n      "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("vertexPosition")]),s._v(": gl.getAttribLocation(shaderProgram, "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'aVertexPosition'")]),s._v("),\n      \n      textureCoord: gl.getAttribLocation(shaderProgram, "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'aTextureCoord'")]),s._v(")\n    },\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("uniformLocations")]),s._v(": {\n      "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("projectionMatrix")]),s._v(": gl.getUniformLocation(\n        shaderProgram,\n        "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'uProjectionMatrix'")]),s._v("\n      ),\n      "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("modelViewMatrix")]),s._v(": gl.getUniformLocation(shaderProgram, "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'uModelViewMatrix'")]),s._v("),\n      "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("sampler")]),s._v(": gl.getUniformLocation(shaderProgram, "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'uSampler'")]),s._v(")\n    }\n  }\n\n  \n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" buffers = initBuffers(gl)\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" texture = loadTextures(\n    gl,\n    "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'https://p0.ssl.qhimg.com/t01836de9c0b1068a6d.jpg'")]),s._v("\n  )\n\n  \n  drawScene(gl, programInfo, buffers, texture)\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" d = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("6")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" r = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" step = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" {\n    r += "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.1")]),s._v("\n\n    drawScene(gl, programInfo, buffers, texture, d, r)\n    requestAnimationFrame(step)\n  }\n\n  requestAnimationFrame(step)\n}\n\n\n"),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("initShaderProgram")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl, vsScource, fsSource")]),s._v(") ")]),s._v("{\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" vsShader = loadShader(gl, gl.VERTEX_SHADER, vsScource)\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" fsShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource)\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" shaderProgram = gl.createProgram()\n  \n  gl.attachShader(shaderProgram, vsShader)\n  \n  gl.attachShader(shaderProgram, fsShader)\n  \n  gl.linkProgram(shaderProgram)\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    alert("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'创建 着色器连接程序 失败!'")]),s._v(" + gl.getProgramInfoLog(shaderProgram))\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n  }\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" shaderProgram\n}\n\n\n"),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("loadShader")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl, type, source")]),s._v(") ")]),s._v("{\n  \n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" shader = gl.createShader(type)\n  \n  gl.shaderSource(shader, source)\n  \n  gl.compileShader(shader)\n\n  \n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    alert("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'编译着色器失败！'")]),s._v(" + gl.getShaderInfoLog(shader))\n    gl.deleteShader(shader)\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n  }\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" shader\n}\n\n\n"),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("initBuffers")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl")]),s._v(") ")]),s._v("{\n  \n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" buffer = gl.createBuffer()\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n  \n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" positions = [\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v("\n  ]\n  gl.bufferData(gl.ARRAY_BUFFER, "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Float32Array")]),s._v("(positions), gl.STATIC_DRAW)\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" cubeVerticesIndexBuffer = gl.createBuffer()\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cubeVerticesIndexBuffer)\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" cubeVertexIndices = [\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("6")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("6")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("7")]),s._v(", \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("8")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("9")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("8")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("11")]),s._v(", \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("12")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("13")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("14")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("12")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("14")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("15")]),s._v(", \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("16")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("17")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("18")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("16")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("18")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("19")]),s._v(", \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("20")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("21")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("22")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("20")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("22")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("23")]),s._v(" \n  ]\n\n  \n\n  gl.bufferData(\n    gl.ELEMENT_ARRAY_BUFFER,\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Uint16Array")]),s._v("(cubeVertexIndices),\n    gl.STATIC_DRAW\n  )\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" textureCoordBuffer = gl.createBuffer()\n  gl.bindBuffer(gl.ARRAY_BUFFER, textureCoordBuffer)\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" textureCoordinates = [\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v("\n  ]\n\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Float32Array")]),s._v("(textureCoordinates),\n    gl.STATIC_DRAW\n  )\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("position")]),s._v(": buffer,\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("textureCoord")]),s._v(": textureCoordBuffer,\n    \n    cubeVerticesIndexBuffer\n  }\n}\n\n\n"),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("drawScene")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl, programInfo, buffers, texture, z = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10.0")]),s._v(", rotate = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")])]),s._v(") ")]),s._v("{\n  gl.clearColor("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(")\n  gl.clearDepth("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(") \n  gl.enable(gl.DEPTH_TEST)\n  gl.depthFunc(gl.LEQUAL)\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n  \n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" feildOfView = ("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("45")]),s._v(" * "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Math")]),s._v(".PI) / "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("180")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" aspect = gl.canvas.clientWidth / gl.canvas.clientHeight\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" zNear = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.1")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" zFar = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("100.0")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" projectionMatrix = mat4.create()\n  mat4.perspective(projectionMatrix, feildOfView, aspect, zNear, zFar)\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" modelViewMatrix = mat4.create()\n  mat4.translate(modelViewMatrix, modelViewMatrix, ["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", -z])\n\n  mat4.rotate(\n    modelViewMatrix, \n    modelViewMatrix, \n    rotate, \n    ["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("8")]),s._v("]\n  )\n\n  mat4.rotate(\n    modelViewMatrix, \n    modelViewMatrix, \n    rotate * "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.7")]),s._v(", \n    ["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-8")]),s._v("]\n  )\n\n  {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" numComponents = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" type = gl.FLOAT\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" normalize = "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" stride = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" offset = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexPosition,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition)\n  }\n\n  {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" numComponents = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" type = gl.FLOAT\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" normalize = "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" stride = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" offset = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.textureCoord)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.textureCoord,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.textureCoord)\n  }\n\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.cubeVerticesIndexBuffer)\n\n  \n  gl.useProgram(programInfo.program)\n\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.projectionMatrix,\n    "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(",\n    projectionMatrix\n  )\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.modelViewMatrix,\n    "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(",\n    modelViewMatrix\n  )\n\n  \n  gl.activeTexture(gl.TEXTURE0)\n\n  \n  gl.bindTexture(gl.TEXTURE_2D, texture)\n\n  \n  gl.uniform1i(programInfo.uniformLocations.sampler, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(")\n\n  {\n    \n    \n    \n\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" vertexCount = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("36")]),s._v(" \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" type = gl.UNSIGNED_SHORT\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" offset = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n    gl.drawElements(gl.TRIANGLES, vertexCount, type, offset)\n  }\n}\n\n\n"),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("loadTextures")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl, url")]),s._v(") ")]),s._v("{\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" texture = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, texture)\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" level = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" internalFormat = gl.RGBA\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" width = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" height = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" border = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" srcFormat = gl.RGBA\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" srcType = gl.UNSIGNED_BYTE\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" pixel = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Uint8Array")]),s._v("(["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("255")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("255")]),s._v("]) \n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    level,\n    internalFormat,\n    width,\n    height,\n    border,\n    srcFormat,\n    srcType,\n    pixel\n  )\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" image = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Image()\n  image.crossOrigin = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("''")]),s._v("\n  image.onload = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    gl.bindTexture(gl.TEXTURE_2D, texture)\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      level,\n      internalFormat,\n      srcFormat,\n      srcType,\n      image\n    )\n\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n      gl.generateMipmap(gl.TEXTURE_2D)\n    } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n    }\n  }\n  image.src = url\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" texture\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("isPowerOf2")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") ")]),s._v("{\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" (value & (value - "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(")) == "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n}\n")])])])],1)},[function(){var s=this.$createElement,n=this._self._c||s;return n("blockquote",[n("p",[this._v("注意：对纹理的加载同样需要遵循跨域访问规则；也就是说你只能从允许跨域访问的网址加载你需要的纹理。")])])},function(){var s=this,n=s.$createElement,r=s._self._c||n;return r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("initTextures")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n  cubeTexture = gl.createTexture()\n  cubeImage = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Image()\n  cubeImage.onload = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    handleTextureLoaded(cubeImage, cubeTexture)\n  }\n  cubeImage.src = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'cubetexture.png'")]),s._v("\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("handleTextureLoaded")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("image, texture")]),s._v(") ")]),s._v("{\n  gl.bindTexture(gl.TEXTURE_2D, texture)\n  gl.texImage2D(gl.TEXTURE_2D, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n  gl.texParameteri(\n    gl.TEXTURE_2D,\n    gl.TEXTURE_MIN_FILTER,\n    gl.LINEAR_MIPMAP_NEAREST\n  )\n  gl.generateMipmap(gl.TEXTURE_2D)\n  gl.bindTexture(gl.TEXTURE_2D, "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(")\n}\n")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("p",[this._v("函数 "),n("code",{pre:!0},[this._v("initTextures()")]),this._v(" 首先调用 "),n("code",{pre:!0},[this._v("gl.createTexture()")]),this._v(" 函数来创建一个 WebGL 纹理对象 "),n("code",{pre:!0},[this._v("cubeTexture")]),this._v(" 。")])},function(){var s=this.$createElement,n=this._self._c||s;return n("p",[this._v("为了真正地形成纹理，通过把新创建的纹理对象绑定到 "),n("code",{pre:!0},[this._v("gl.TEXTURE_2D")]),this._v(" 来让它成为当前操作纹理。然后通过调用 "),n("code",{pre:!0},[this._v("texImage2D()")]),this._v(" 把已经加载的图片图形数据写到纹理。")])},function(){var s=this.$createElement,n=this._self._c||s;return n("blockquote",[n("p",[this._v("注意： 在多数情况下，纹理的宽和高都必须是 2 的幂（如：1，2，4，8，16 等等）。如果有什么特殊情况请参考下面的“非 2 的幂纹理”小节。")])])},function(){var s=this,n=s.$createElement,r=s._self._c||n;return r("p",[s._v("代码的接下来两行设置了纹理过滤器，过滤器用来控制当图片缩放时像素如何生成如何插值。在这个例子里，对图片放大使用的是线性过滤，而对图片缩小使用的是多级渐进纹理过滤。接下来通过调用 "),r("code",{pre:!0},[s._v("generateMipMap()")]),s._v(" 来生成多级渐进纹理，接着通过给 "),r("code",{pre:!0},[s._v("gl.TEXTURE_2D")]),s._v(" 绑定值 "),r("code",{pre:!0},[s._v("null")]),s._v(" 来告诉 "),r("code",{pre:!0},[s._v("WebGL")]),s._v(" 对当前纹理的操作已经结束了。")])},function(){var s=this.$createElement,n=this._self._c||s;return n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[this._v("\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":""}},[this._v("cubeVerticesTextureCoordBuffer = gl.createBuffer()\ngl.bindBuffer(gl.ARRAY_BUFFER, cubeVerticesTextureCoordBuffer)\nvar textureCoordinates = [\n  // Front\n  0.0,  0.0,\n  1.0,  0.0,\n  1.0,  1.0,\n  0.0,  1.0,\n  // Back\n  0.0,  0.0,\n  1.0,  0.0,\n  1.0,  1.0,\n  0.0,  1.0,\n  // Top\n  0.0,  0.0,\n  1.0,  0.0,\n  1.0,  1.0,\n  0.0,  1.0,\n  // Bottom\n  0.0,  0.0,\n  1.0,  0.0,\n  1.0,  1.0,\n  0.0,  1.0,\n  // Right\n  0.0,  0.0,\n  1.0,  0.0,\n  1.0,  1.0,\n  0.0,  1.0,\n  // Left\n  0.0,  0.0,\n  1.0,  0.0,\n  1.0,  1.0,\n  0.0,  1.0\n];\ngl.bufferData(\n  gl.ARRAY_BUFFER,\n  new Float32Array(textureCoordinates),\n  gl.STATIC_DRAW\n)\n")])])},function(){var s=this,n=s.$createElement,r=s._self._c||n;return r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("textureCoordAttribute = gl.getAttribLocation(shaderProgram, "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'aTextureCoord'")]),s._v(")\ngl.enableVertexAttribArray(textureCoordAttribute)\ngl.vertexAttribPointer(texCoordAttribute, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", gl.FLOAT, "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(")\n")])])},function(){var s=this,n=s.$createElement,r=s._self._c||n;return r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"shader-vs"')]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"x-shader/x-vertex"')]),s._v(">")]),r("span",{pre:!0,attrs:{class:"actionscript"}},[s._v("\n  attribute vec3 aVertexPosition;\n  attribute vec2 aTextureCoord;\n\n  uniform mat4 uMVMatrix;\n  uniform mat4 uPMatrix;\n\n  varying highp vec2 vTextureCoord;\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" main("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(") {\n    gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(");\n    vTextureCoord = aTextureCoord;\n  }\n")]),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),s._v("\n")])])},function(){var s=this,n=s.$createElement,r=s._self._c||n;return r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"shader-fs"')]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"x-shader/x-fragment"')]),s._v(">")]),r("span",{pre:!0,attrs:{class:"actionscript"}},[s._v("\n  varying highp vec2 vTextureCoord;\n\n  uniform sampler2D uSampler;\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" main("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(") {\n    gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\n  }\n")]),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),s._v("\n")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[this._v("gl.activeTexture(gl.TEXTURE0)\ngl.bindTexture(gl.TEXTURE_2D, cubeTexture)\ngl.uniform1i(gl.getUniformLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[this._v("'uSampler'")]),this._v("), "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[this._v("0")]),this._v(")\n")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("p",[this._v("WebGL 最多可同时注册 32 张纹理；"),n("code",{pre:!0},[this._v("gl.TEXTURE0")]),this._v(" 是第一张。我们把我们之前加载的纹理绑定到了第一个寄存器，然后着色器程序里的采样器 uSampler 就会完成它的功能：使用纹理。")])}],!1,null,null,null);n.default=t.exports}}]);