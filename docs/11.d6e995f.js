(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{33:function(s,r,n){"use strict";n.r(r);var a={components:{}},t=n(2),e=Object(t.a)(a,function(){var s=this,r=s.$createElement,n=s._self._c||r;return n("section",[n("h1",[s._v("为物体赋予动画")]),s._v(" "),n("p",[s._v("前面绘制的正方形相关着色器以及 js 部分绘制代码有：")]),s._v(" "),s._m(0),s._v(" "),s._m(1),s._v(" "),s._m(2),s._v(" "),s._m(3),s._v(" "),n("block-demo",{attrs:{tip:"",source:"const app = document.querySelector('#app')\nconst canvas = document.createElement('canvas')\ncanvas.width = 400\ncanvas.height = 300\n\napp.appendChild(canvas)\n\nconst gl = canvas.getContext('webgl')\n\n// 顶点着色器\nconst vsSource = `\n  attribute vec4 aVertexPosition;\n  attribute vec4 aVertexColor;\n\n  uniform mat4 uModelViewMatrix;\n  uniform mat4 uProjectionMatrix;\n\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n    vColor = aVertexColor;\n  }\n`\n\n// 片段着色器\nconst fsSource = `\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`\n\n// 着色器程序\nconst shaderProgram = initShaderProgram(gl, vsSource, fsSource)\nconst programInfo = {\n  program: shaderProgram,\n  attribLocations: {\n    vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\n    vertexColor: gl.getAttribLocation(shaderProgram, 'aVertexColor')\n  },\n  uniformLocations: {\n    projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\n    modelViewMatrix: gl.getUniformLocation(shaderProgram, 'uModelViewMatrix')\n  }\n}\n\n// 创建缓冲区\nconst buffers = initBuffers(gl)\n//  绘制场景\n\nlet r = 0.8\n\ndrawScene(gl, programInfo, buffers, r)\n\n// 加载 着色器\nfunction loadShader(gl, type, source) {\n  // 0. 创建指定类型的着色器\n  const shader = gl.createShader(type)\n\n  // 1. 上传源码\n  gl.shaderSource(shader, source)\n\n  // 2. 编译着色器\n  gl.compileShader(shader)\n\n  // 检测编译状态\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    alert('编译失败！', gl.getShaderInfoLog(shader))\n    gl.deleteShader(shader)\n    return null\n  }\n\n  return shader\n}\n\n// 链接着色器程序\nfunction initShaderProgram(gl, vsSouce, fsSource) {\n  // 0. 创建两类型着色器\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource)\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource)\n\n  // 1. 附加着色器程序\n  const shaderProgram = gl.createProgram()\n  gl.attachShader(shaderProgram, vertexShader)\n  gl.attachShader(shaderProgram, fragmentShader)\n  gl.linkProgram(shaderProgram)\n\n  // 检测链接状态\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    alert('初始化着色器程序失败', gl.getProgramInfoLog(shaderProgram))\n    return null\n  }\n\n  return shaderProgram\n}\n\nfunction initBuffers(gl) {\n  // 0. 创建 buffer 存储正方形顶点\n  const buffer = gl.createBuffer()\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n  // 1. 将顶点传入 WebGL\n  const positions = [1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0]\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW)\n\n  // 2. 颜色\n  const colors = [\n    1,\n    1,\n    1,\n    1, // 白色\n    1,\n    0,\n    0,\n    1, // 红色\n    0,\n    1,\n    0,\n    1, // 绿色\n    0,\n    0,\n    1,\n    1 // 蓝色\n  ]\n\n  const color = gl.createBuffer()\n  gl.bindBuffer(gl.ARRAY_BUFFER, color)\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW)\n\n  return { position: buffer, color }\n}\n\n// 绘制场景\nfunction drawScene(gl, programInfo, buffers, r) {\n  gl.clearColor(0.0, 0.0, 0.0, 1)\n  gl.clearDepth(1) // 清空\n  gl.enable(gl.DEPTH_TEST)\n  gl.depthFunc(gl.LEQUAL)\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n  // 利用 gl-matrix 创建一个 透视投影相机\n  const feildOfView = (45 * Math.PI) / 180\n  const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight\n  const zNear = 0.1\n  const zFar = 100.0\n  const projectionMatrix = mat4.create()\n  mat4.perspective(projectionMatrix, feildOfView, aspect, zNear, zFar)\n\n  const modelViewMatrix = mat4.create()\n  mat4.translate(modelViewMatrix, modelViewMatrix, [-0.0, 0.0, -8])\n  mat4.rotate(modelViewMatrix, modelViewMatrix, r, [2, 4, 8])\n\n  {\n    const numComponents = 2\n    const type = gl.FLOAT\n    const normalize = false\n    const stride = 0\n    const offset = 0\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexPosition,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition)\n  }\n\n  {\n    const numComponents = 4\n    const type = gl.FLOAT\n    const normalize = false\n    const stride = 0\n    const offset = 0\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexColor,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexColor)\n  }\n\n  // 告知 WebGL 使用 着色器 绘制\n  gl.useProgram(programInfo.program)\n\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.projectionMatrix,\n    false,\n    projectionMatrix\n  )\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.modelViewMatrix,\n    false,\n    modelViewMatrix\n  )\n\n  {\n    const offset = 0\n    const vertexCount = 4\n    gl.drawArrays(gl.TRIANGLE_STRIP, offset, vertexCount)\n  }\n}\n"}},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" app = "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".querySelector("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'#app'")]),s._v(")\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" canvas = "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'canvas'")]),s._v(")\ncanvas.width = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("400")]),s._v("\ncanvas.height = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("300")]),s._v("\n\napp.appendChild(canvas)\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" gl = canvas.getContext("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'webgl'")]),s._v(")\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" vsSource = "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`\n  attribute vec4 aVertexPosition;\n  attribute vec4 aVertexColor;\n\n  uniform mat4 uModelViewMatrix;\n  uniform mat4 uProjectionMatrix;\n\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n    vColor = aVertexColor;\n  }\n`")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" fsSource = "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" shaderProgram = initShaderProgram(gl, vsSource, fsSource)\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" programInfo = {\n  "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("program")]),s._v(": shaderProgram,\n  "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("attribLocations")]),s._v(": {\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("vertexPosition")]),s._v(": gl.getAttribLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'aVertexPosition'")]),s._v("),\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("vertexColor")]),s._v(": gl.getAttribLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'aVertexColor'")]),s._v(")\n  },\n  "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("uniformLocations")]),s._v(": {\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("projectionMatrix")]),s._v(": gl.getUniformLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'uProjectionMatrix'")]),s._v("),\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("modelViewMatrix")]),s._v(": gl.getUniformLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'uModelViewMatrix'")]),s._v(")\n  }\n}\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" buffers = initBuffers(gl)\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" r = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.8")]),s._v("\n\ndrawScene(gl, programInfo, buffers, r)\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("loadShader")]),s._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl, type, source")]),s._v(") ")]),s._v("{\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" shader = gl.createShader(type)\n\n  \n  gl.shaderSource(shader, source)\n\n  \n  gl.compileShader(shader)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    alert("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'编译失败！'")]),s._v(", gl.getShaderInfoLog(shader))\n    gl.deleteShader(shader)\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n  }\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" shader\n}\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("initShaderProgram")]),s._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl, vsSouce, fsSource")]),s._v(") ")]),s._v("{\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource)\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" shaderProgram = gl.createProgram()\n  gl.attachShader(shaderProgram, vertexShader)\n  gl.attachShader(shaderProgram, fragmentShader)\n  gl.linkProgram(shaderProgram)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    alert("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'初始化着色器程序失败'")]),s._v(", gl.getProgramInfoLog(shaderProgram))\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n  }\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" shaderProgram\n}\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("initBuffers")]),s._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl")]),s._v(") ")]),s._v("{\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" buffer = gl.createBuffer()\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" positions = ["),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v("]\n  gl.bufferData(gl.ARRAY_BUFFER, "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Float32Array")]),s._v("(positions), gl.STATIC_DRAW)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" colors = [\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", \n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", \n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", \n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" \n  ]\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" color = gl.createBuffer()\n  gl.bindBuffer(gl.ARRAY_BUFFER, color)\n  gl.bufferData(gl.ARRAY_BUFFER, "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Float32Array")]),s._v("(colors), gl.STATIC_DRAW)\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" { "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("position")]),s._v(": buffer, color }\n}\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("drawScene")]),s._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl, programInfo, buffers, r")]),s._v(") ")]),s._v("{\n  gl.clearColor("),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(")\n  gl.clearDepth("),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(") \n  gl.enable(gl.DEPTH_TEST)\n  gl.depthFunc(gl.LEQUAL)\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" feildOfView = ("),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("45")]),s._v(" * "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Math")]),s._v(".PI) / "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("180")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" aspect = gl.canvas.clientWidth / gl.canvas.clientHeight\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" zNear = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.1")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" zFar = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("100.0")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" projectionMatrix = mat4.create()\n  mat4.perspective(projectionMatrix, feildOfView, aspect, zNear, zFar)\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" modelViewMatrix = mat4.create()\n  mat4.translate(modelViewMatrix, modelViewMatrix, ["),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-0.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-8")]),s._v("])\n  mat4.rotate(modelViewMatrix, modelViewMatrix, r, ["),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("8")]),s._v("])\n\n  {\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" numComponents = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" type = gl.FLOAT\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" normalize = "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" stride = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" offset = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexPosition,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition)\n  }\n\n  {\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" numComponents = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" type = gl.FLOAT\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" normalize = "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" stride = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" offset = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexColor,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexColor)\n  }\n\n  \n  gl.useProgram(programInfo.program)\n\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.projectionMatrix,\n    "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(",\n    projectionMatrix\n  )\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.modelViewMatrix,\n    "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(",\n    modelViewMatrix\n  )\n\n  {\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" offset = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" vertexCount = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v("\n    gl.drawArrays(gl.TRIANGLE_STRIP, offset, vertexCount)\n  }\n}\n")])])]),n("p",[s._v("动画的思路就很清晰了，不断改变 相关矩阵属性并重绘即可。")]),s._v(" "),n("block-demo",{attrs:{tip:"",source:"const app = document.querySelector('#app')\nconst canvas = document.createElement('canvas')\ncanvas.width = 400\ncanvas.height = 300\n\napp.appendChild(canvas)\n\nconst gl = canvas.getContext('webgl')\n\n// 顶点着色器\nconst vsSource = `\n  attribute vec4 aVertexPosition;\n  attribute vec4 aVertexColor;\n\n  uniform mat4 uModelViewMatrix;\n  uniform mat4 uProjectionMatrix;\n\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n    vColor = aVertexColor;\n  }\n`\n\n// 片段着色器\nconst fsSource = `\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`\n\n// 着色器程序\nconst shaderProgram = initShaderProgram(gl, vsSource, fsSource)\nconst programInfo = {\n  program: shaderProgram,\n  attribLocations: {\n    vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\n    vertexColor: gl.getAttribLocation(shaderProgram, 'aVertexColor')\n  },\n  uniformLocations: {\n    projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\n    modelViewMatrix: gl.getUniformLocation(shaderProgram, 'uModelViewMatrix')\n  }\n}\n\n// 创建缓冲区\nconst buffers = initBuffers(gl)\n//  绘制场景\n\nlet r = 0\n\nconst step = () => {\n  drawScene(gl, programInfo, buffers, (r += 0.01))\n  requestAnimationFrame(step)\n}\n\nstep()\n\n// 加载 着色器\nfunction loadShader(gl, type, source) {\n  // 0. 创建指定类型的着色器\n  const shader = gl.createShader(type)\n\n  // 1. 上传源码\n  gl.shaderSource(shader, source)\n\n  // 2. 编译着色器\n  gl.compileShader(shader)\n\n  // 检测编译状态\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    alert('编译失败！', gl.getShaderInfoLog(shader))\n    gl.deleteShader(shader)\n    return null\n  }\n\n  return shader\n}\n\n// 链接着色器程序\nfunction initShaderProgram(gl, vsSouce, fsSource) {\n  // 0. 创建两类型着色器\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource)\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource)\n\n  // 1. 附加着色器程序\n  const shaderProgram = gl.createProgram()\n  gl.attachShader(shaderProgram, vertexShader)\n  gl.attachShader(shaderProgram, fragmentShader)\n  gl.linkProgram(shaderProgram)\n\n  // 检测链接状态\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    alert('初始化着色器程序失败', gl.getProgramInfoLog(shaderProgram))\n    return null\n  }\n\n  return shaderProgram\n}\n\nfunction initBuffers(gl) {\n  // 0. 创建 buffer 存储正方形顶点\n  const buffer = gl.createBuffer()\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n  // 1. 将顶点传入 WebGL\n  const positions = [1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0]\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW)\n\n  // 2. 颜色\n  const colors = [\n    1,\n    1,\n    1,\n    1, // 白色\n    1,\n    0,\n    0,\n    1, // 红色\n    0,\n    1,\n    0,\n    1, // 绿色\n    0,\n    0,\n    1,\n    1 // 蓝色\n  ]\n\n  const color = gl.createBuffer()\n  gl.bindBuffer(gl.ARRAY_BUFFER, color)\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW)\n\n  return { position: buffer, color }\n}\n\n// 绘制场景\nfunction drawScene(gl, programInfo, buffers, r) {\n  gl.clearColor(0.0, 0.0, 0.0, 1)\n  gl.clearDepth(1) // 清空\n  gl.enable(gl.DEPTH_TEST)\n  gl.depthFunc(gl.LEQUAL)\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n  // 利用 gl-matrix 创建一个 透视投影相机\n  const feildOfView = (45 * Math.PI) / 180\n  const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight\n  const zNear = 0.1\n  const zFar = 100.0\n  const projectionMatrix = mat4.create()\n  mat4.perspective(projectionMatrix, feildOfView, aspect, zNear, zFar)\n\n  const modelViewMatrix = mat4.create()\n  mat4.translate(modelViewMatrix, modelViewMatrix, [-0.0, 0.0, -8])\n  mat4.rotate(modelViewMatrix, modelViewMatrix, r, [2, 4, 8])\n\n  {\n    const numComponents = 2\n    const type = gl.FLOAT\n    const normalize = false\n    const stride = 0\n    const offset = 0\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexPosition,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition)\n  }\n\n  {\n    const numComponents = 4\n    const type = gl.FLOAT\n    const normalize = false\n    const stride = 0\n    const offset = 0\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexColor,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexColor)\n  }\n\n  // 告知 WebGL 使用 着色器 绘制\n  gl.useProgram(programInfo.program)\n\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.projectionMatrix,\n    false,\n    projectionMatrix\n  )\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.modelViewMatrix,\n    false,\n    modelViewMatrix\n  )\n\n  {\n    const offset = 0\n    const vertexCount = 4\n    gl.drawArrays(gl.TRIANGLE_STRIP, offset, vertexCount)\n  }\n}\n"}},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" app = "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".querySelector("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'#app'")]),s._v(")\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" canvas = "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'canvas'")]),s._v(")\ncanvas.width = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("400")]),s._v("\ncanvas.height = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("300")]),s._v("\n\napp.appendChild(canvas)\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" gl = canvas.getContext("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'webgl'")]),s._v(")\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" vsSource = "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`\n  attribute vec4 aVertexPosition;\n  attribute vec4 aVertexColor;\n\n  uniform mat4 uModelViewMatrix;\n  uniform mat4 uProjectionMatrix;\n\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n    vColor = aVertexColor;\n  }\n`")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" fsSource = "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`\n  varying lowp vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" shaderProgram = initShaderProgram(gl, vsSource, fsSource)\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" programInfo = {\n  "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("program")]),s._v(": shaderProgram,\n  "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("attribLocations")]),s._v(": {\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("vertexPosition")]),s._v(": gl.getAttribLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'aVertexPosition'")]),s._v("),\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("vertexColor")]),s._v(": gl.getAttribLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'aVertexColor'")]),s._v(")\n  },\n  "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("uniformLocations")]),s._v(": {\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("projectionMatrix")]),s._v(": gl.getUniformLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'uProjectionMatrix'")]),s._v("),\n    "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("modelViewMatrix")]),s._v(": gl.getUniformLocation(shaderProgram, "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'uModelViewMatrix'")]),s._v(")\n  }\n}\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" buffers = initBuffers(gl)\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" r = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" step = "),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" {\n  drawScene(gl, programInfo, buffers, (r += "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.01")]),s._v("))\n  requestAnimationFrame(step)\n}\n\nstep()\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("loadShader")]),s._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl, type, source")]),s._v(") ")]),s._v("{\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" shader = gl.createShader(type)\n\n  \n  gl.shaderSource(shader, source)\n\n  \n  gl.compileShader(shader)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    alert("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'编译失败！'")]),s._v(", gl.getShaderInfoLog(shader))\n    gl.deleteShader(shader)\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n  }\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" shader\n}\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("initShaderProgram")]),s._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl, vsSouce, fsSource")]),s._v(") ")]),s._v("{\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource)\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" shaderProgram = gl.createProgram()\n  gl.attachShader(shaderProgram, vertexShader)\n  gl.attachShader(shaderProgram, fragmentShader)\n  gl.linkProgram(shaderProgram)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    alert("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'初始化着色器程序失败'")]),s._v(", gl.getProgramInfoLog(shaderProgram))\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n  }\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" shaderProgram\n}\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("initBuffers")]),s._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl")]),s._v(") ")]),s._v("{\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" buffer = gl.createBuffer()\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" positions = ["),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1.0")]),s._v("]\n  gl.bufferData(gl.ARRAY_BUFFER, "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Float32Array")]),s._v("(positions), gl.STATIC_DRAW)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" colors = [\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", \n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", \n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", \n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n    "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" \n  ]\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" color = gl.createBuffer()\n  gl.bindBuffer(gl.ARRAY_BUFFER, color)\n  gl.bufferData(gl.ARRAY_BUFFER, "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Float32Array")]),s._v("(colors), gl.STATIC_DRAW)\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" { "),n("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("position")]),s._v(": buffer, color }\n}\n\n\n"),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("drawScene")]),s._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("gl, programInfo, buffers, r")]),s._v(") ")]),s._v("{\n  gl.clearColor("),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(")\n  gl.clearDepth("),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(") \n  gl.enable(gl.DEPTH_TEST)\n  gl.depthFunc(gl.LEQUAL)\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n  \n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" feildOfView = ("),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("45")]),s._v(" * "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Math")]),s._v(".PI) / "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("180")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" aspect = gl.canvas.clientWidth / gl.canvas.clientHeight\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" zNear = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.1")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" zFar = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("100.0")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" projectionMatrix = mat4.create()\n  mat4.perspective(projectionMatrix, feildOfView, aspect, zNear, zFar)\n\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" modelViewMatrix = mat4.create()\n  mat4.translate(modelViewMatrix, modelViewMatrix, ["),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-0.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-8")]),s._v("])\n  mat4.rotate(modelViewMatrix, modelViewMatrix, r, ["),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("8")]),s._v("])\n\n  {\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" numComponents = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" type = gl.FLOAT\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" normalize = "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" stride = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" offset = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexPosition,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition)\n  }\n\n  {\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" numComponents = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" type = gl.FLOAT\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" normalize = "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" stride = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" offset = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color)\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexColor,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    )\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexColor)\n  }\n\n  \n  gl.useProgram(programInfo.program)\n\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.projectionMatrix,\n    "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(",\n    projectionMatrix\n  )\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.modelViewMatrix,\n    "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(",\n    modelViewMatrix\n  )\n\n  {\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" offset = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" vertexCount = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v("\n    gl.drawArrays(gl.TRIANGLE_STRIP, offset, vertexCount)\n  }\n}\n")])])])],1)},[function(){var s=this,r=s.$createElement,n=s._self._c||r;return n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-glsl"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("attribute")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-type"}},[s._v("vec4")]),s._v(" aVertexPosition;\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("attribute")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-type"}},[s._v("vec4")]),s._v(" aVertexColor;\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("uniform")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-type"}},[s._v("mat4")]),s._v(" uModelViewMatrix;\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("uniform")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-type"}},[s._v("mat4")]),s._v(" uProjectionMatrix;\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("varying")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("lowp")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-type"}},[s._v("vec4")]),s._v(" vColor;\n\n"),n("span",{pre:!0,attrs:{class:"hljs-type"}},[s._v("void")]),s._v(" main() {\n  "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("gl_Position")]),s._v(" = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n  vColor = aVertexColor;\n}\n")])])},function(){var s=this,r=s.$createElement,n=s._self._c||r;return n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" feildOfView = ("),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("45")]),s._v(" * "),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Math")]),s._v(".PI) / "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("180")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" aspect = gl.canvas.clientWidth / gl.canvas.clientHeight\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" zNear = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" zFar = "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("100.0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" projectionMatrix = mat4.create()\nmat4.perspective(projectionMatrix, feildOfView, aspect, zNear, zFar)\n\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" modelViewMatrix = mat4.create()\nmat4.translate(modelViewMatrix, modelViewMatrix, ["),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-0.0")]),s._v(", "),n("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0.0")]),s._v(", -z])\n\n\ngl.useProgram(programInfo.program)\n\ngl.uniformMatrix4fv(\n  programInfo.uniformLocations.projectionMatrix,\n  "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(",\n  projectionMatrix\n)\ngl.uniformMatrix4fv(\n  programInfo.uniformLocations.modelViewMatrix,\n  "),n("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(",\n  modelViewMatrix\n)\n")])])},function(){var s=this,r=s.$createElement,n=s._self._c||r;return n("p",[s._v("可以看出在顶点着色器中 "),n("code",{pre:!0},[s._v("gl_Position")]),s._v(" 的位置是 "),n("code",{pre:!0},[s._v("uProjectionMatrix")]),s._v("、"),n("code",{pre:!0},[s._v("uModelViewMatrix")]),s._v(" 和 "),n("code",{pre:!0},[s._v("aVertexPosition")]),s._v(" 作用的结果，同时在 js 部分传入了这两个 4x4 矩阵，这样才在 "),n("code",{pre:!0},[s._v("WebGl")]),s._v(" 绘制出正方形。")])},function(){var s=this.$createElement,r=this._self._c||s;return r("p",[this._v("那么试着改变这两个矩阵相关属性。例如，旋转 视图矩阵 "),r("code",{pre:!0},[this._v("uModelViewMatrix")]),this._v("。")])}],!1,null,null,null);r.default=e.exports}}]);